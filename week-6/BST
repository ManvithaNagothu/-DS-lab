#include<stdio.h>
#include<stdlib.h>
struct node
{
int data;
struct node*left;
struct node*right;
};
struct node*root = NULL, *cur, *temp;
struct node*create()
{
cur = (struct node*)malloc(sizeof(struct node));
cur->left = NULL;
cur->right = NULL;
scanf("%d", &cur->data);
if(root == NULL){
root = cur;
}
else{
temp = root;
while(temp != NULL){
if(cur->data < temp->data && temp->left == NULL){
temp->left = cur;
return root;
}
else if(cur->data < temp->data && temp->left != NULL){
temp = temp-> left;
}
else if(cur->data > temp->data && temp->right == NULL){
temp->right = cur;
return root;
}
else if(cur->data > temp->data && temp->right != NULL){
temp = temp -> right;
}
}
}
}
void preorder(struct node*root){
if(root != NULL){
printf("%d\t", root->data);
preorder(root->left);
preorder(root->right);
}
}
void inorder(struct node*root){
if(root != NULL){
inorder(root->left);
printf("%d\t", root->data);
inorder(root->right);
}
}
void postorder(struct node*root){
if(root != NULL){
postorder(root->left);
postorder(root->right);
printf("%d\t", root->data);
}
}
int main() {
int ch;
while(1){
printf("\n1: Create\n2: Pre-Order Traversal\n3: In-order Traversal\n4: Post-order Traversal\n5: Exit\n");
printf("Enter your choice");
scanf("%d", &ch);
switch(ch){
case 1: create();
break;
case 2: preorder(root);
break;
case 3: inorder(root);
break;
case 4: postorder(root);
break;
case 5: exit(0);
}
}
}
outpu1: Create
2: Pre-Order Traversal
3: In-order Traversal
4: Post-order Traversal
5: Exit
Enter your choice1
45

1: Create
2: Pre-Order Traversal
3: In-order Traversal
4: Post-order Traversal
5: Exit
Enter your choice1
23

1: Create
2: Pre-Order Traversal
3: In-order Traversal
4: Post-order Traversal
5: Exit
Enter your choice1
35

1: Create
2: Pre-Order Traversal
3: In-order Traversal
4: Post-order Traversal
5: Exit
Enter your choice1 
12

1: Create
2: Pre-Order Traversal
3: In-order Traversal
4: Post-order Traversal
5: Exit
Enter your choice1
75

1: Create
2: Pre-Order Traversal
3: In-order Traversal
4: Post-order Traversal
5: Exit
Enter your choice2
45	23	12	35	75	
1: Create
2: Pre-Order Traversal
3: In-order Traversal
4: Post-order Traversal
5: Exit
Enter your choice3
12	23	35	45	75	
1: Create
2: Pre-Order Traversal
3: In-order Traversal
4: Post-order Traversal
5: Exit
Enter your choice4
12	35	23	75	45	
1: Create
2: Pre-Order Traversal
3: In-order Traversal
4: Post-order Traversal
5: Exit
Enter your choice5
